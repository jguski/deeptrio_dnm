// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: deepvariant/protos/resources.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_deepvariant_2fprotos_2fresources_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_deepvariant_2fprotos_2fresources_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_deepvariant_2fprotos_2fresources_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_deepvariant_2fprotos_2fresources_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_deepvariant_2fprotos_2fresources_2eproto;
namespace learning {
namespace genomics {
namespace deepvariant {
class ResourceMetrics;
class ResourceMetricsDefaultTypeInternal;
extern ResourceMetricsDefaultTypeInternal _ResourceMetrics_default_instance_;
}  // namespace deepvariant
}  // namespace genomics
}  // namespace learning
PROTOBUF_NAMESPACE_OPEN
template<> ::learning::genomics::deepvariant::ResourceMetrics* Arena::CreateMaybeMessage<::learning::genomics::deepvariant::ResourceMetrics>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace learning {
namespace genomics {
namespace deepvariant {

// ===================================================================

class ResourceMetrics :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:learning.genomics.deepvariant.ResourceMetrics) */ {
 public:
  ResourceMetrics();
  virtual ~ResourceMetrics();

  ResourceMetrics(const ResourceMetrics& from);
  ResourceMetrics(ResourceMetrics&& from) noexcept
    : ResourceMetrics() {
    *this = ::std::move(from);
  }

  inline ResourceMetrics& operator=(const ResourceMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResourceMetrics& operator=(ResourceMetrics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ResourceMetrics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResourceMetrics* internal_default_instance() {
    return reinterpret_cast<const ResourceMetrics*>(
               &_ResourceMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ResourceMetrics& a, ResourceMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(ResourceMetrics* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResourceMetrics* New() const final {
    return CreateMaybeMessage<ResourceMetrics>(nullptr);
  }

  ResourceMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResourceMetrics>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResourceMetrics& from);
  void MergeFrom(const ResourceMetrics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResourceMetrics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "learning.genomics.deepvariant.ResourceMetrics";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_deepvariant_2fprotos_2fresources_2eproto);
    return ::descriptor_table_deepvariant_2fprotos_2fresources_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHostNameFieldNumber = 1,
    kCpuFrequencyMhzFieldNumber = 3,
    kPhysicalCoreCountFieldNumber = 2,
    kTotalMemoryMbFieldNumber = 4,
    kWallTimeSecondsFieldNumber = 5,
    kCpuUserTimeSecondsFieldNumber = 6,
    kCpuSystemTimeSecondsFieldNumber = 7,
    kReadBytesFieldNumber = 9,
    kWriteBytesFieldNumber = 10,
    kMemoryPeakRssMbFieldNumber = 8,
  };
  // string host_name = 1;
  void clear_host_name();
  const std::string& host_name() const;
  void set_host_name(const std::string& value);
  void set_host_name(std::string&& value);
  void set_host_name(const char* value);
  void set_host_name(const char* value, size_t size);
  std::string* mutable_host_name();
  std::string* release_host_name();
  void set_allocated_host_name(std::string* host_name);

  // double cpu_frequency_mhz = 3;
  void clear_cpu_frequency_mhz();
  double cpu_frequency_mhz() const;
  void set_cpu_frequency_mhz(double value);

  // int32 physical_core_count = 2;
  void clear_physical_core_count();
  ::PROTOBUF_NAMESPACE_ID::int32 physical_core_count() const;
  void set_physical_core_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 total_memory_mb = 4;
  void clear_total_memory_mb();
  ::PROTOBUF_NAMESPACE_ID::int32 total_memory_mb() const;
  void set_total_memory_mb(::PROTOBUF_NAMESPACE_ID::int32 value);

  // double wall_time_seconds = 5;
  void clear_wall_time_seconds();
  double wall_time_seconds() const;
  void set_wall_time_seconds(double value);

  // double cpu_user_time_seconds = 6;
  void clear_cpu_user_time_seconds();
  double cpu_user_time_seconds() const;
  void set_cpu_user_time_seconds(double value);

  // double cpu_system_time_seconds = 7;
  void clear_cpu_system_time_seconds();
  double cpu_system_time_seconds() const;
  void set_cpu_system_time_seconds(double value);

  // int64 read_bytes = 9;
  void clear_read_bytes();
  ::PROTOBUF_NAMESPACE_ID::int64 read_bytes() const;
  void set_read_bytes(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 write_bytes = 10;
  void clear_write_bytes();
  ::PROTOBUF_NAMESPACE_ID::int64 write_bytes() const;
  void set_write_bytes(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int32 memory_peak_rss_mb = 8;
  void clear_memory_peak_rss_mb();
  ::PROTOBUF_NAMESPACE_ID::int32 memory_peak_rss_mb() const;
  void set_memory_peak_rss_mb(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:learning.genomics.deepvariant.ResourceMetrics)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr host_name_;
  double cpu_frequency_mhz_;
  ::PROTOBUF_NAMESPACE_ID::int32 physical_core_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_memory_mb_;
  double wall_time_seconds_;
  double cpu_user_time_seconds_;
  double cpu_system_time_seconds_;
  ::PROTOBUF_NAMESPACE_ID::int64 read_bytes_;
  ::PROTOBUF_NAMESPACE_ID::int64 write_bytes_;
  ::PROTOBUF_NAMESPACE_ID::int32 memory_peak_rss_mb_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_deepvariant_2fprotos_2fresources_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ResourceMetrics

// string host_name = 1;
inline void ResourceMetrics::clear_host_name() {
  host_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ResourceMetrics::host_name() const {
  // @@protoc_insertion_point(field_get:learning.genomics.deepvariant.ResourceMetrics.host_name)
  return host_name_.GetNoArena();
}
inline void ResourceMetrics::set_host_name(const std::string& value) {
  
  host_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:learning.genomics.deepvariant.ResourceMetrics.host_name)
}
inline void ResourceMetrics::set_host_name(std::string&& value) {
  
  host_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:learning.genomics.deepvariant.ResourceMetrics.host_name)
}
inline void ResourceMetrics::set_host_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  host_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:learning.genomics.deepvariant.ResourceMetrics.host_name)
}
inline void ResourceMetrics::set_host_name(const char* value, size_t size) {
  
  host_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:learning.genomics.deepvariant.ResourceMetrics.host_name)
}
inline std::string* ResourceMetrics::mutable_host_name() {
  
  // @@protoc_insertion_point(field_mutable:learning.genomics.deepvariant.ResourceMetrics.host_name)
  return host_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ResourceMetrics::release_host_name() {
  // @@protoc_insertion_point(field_release:learning.genomics.deepvariant.ResourceMetrics.host_name)
  
  return host_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ResourceMetrics::set_allocated_host_name(std::string* host_name) {
  if (host_name != nullptr) {
    
  } else {
    
  }
  host_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), host_name);
  // @@protoc_insertion_point(field_set_allocated:learning.genomics.deepvariant.ResourceMetrics.host_name)
}

// int32 physical_core_count = 2;
inline void ResourceMetrics::clear_physical_core_count() {
  physical_core_count_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResourceMetrics::physical_core_count() const {
  // @@protoc_insertion_point(field_get:learning.genomics.deepvariant.ResourceMetrics.physical_core_count)
  return physical_core_count_;
}
inline void ResourceMetrics::set_physical_core_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  physical_core_count_ = value;
  // @@protoc_insertion_point(field_set:learning.genomics.deepvariant.ResourceMetrics.physical_core_count)
}

// double cpu_frequency_mhz = 3;
inline void ResourceMetrics::clear_cpu_frequency_mhz() {
  cpu_frequency_mhz_ = 0;
}
inline double ResourceMetrics::cpu_frequency_mhz() const {
  // @@protoc_insertion_point(field_get:learning.genomics.deepvariant.ResourceMetrics.cpu_frequency_mhz)
  return cpu_frequency_mhz_;
}
inline void ResourceMetrics::set_cpu_frequency_mhz(double value) {
  
  cpu_frequency_mhz_ = value;
  // @@protoc_insertion_point(field_set:learning.genomics.deepvariant.ResourceMetrics.cpu_frequency_mhz)
}

// int32 total_memory_mb = 4;
inline void ResourceMetrics::clear_total_memory_mb() {
  total_memory_mb_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResourceMetrics::total_memory_mb() const {
  // @@protoc_insertion_point(field_get:learning.genomics.deepvariant.ResourceMetrics.total_memory_mb)
  return total_memory_mb_;
}
inline void ResourceMetrics::set_total_memory_mb(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  total_memory_mb_ = value;
  // @@protoc_insertion_point(field_set:learning.genomics.deepvariant.ResourceMetrics.total_memory_mb)
}

// double wall_time_seconds = 5;
inline void ResourceMetrics::clear_wall_time_seconds() {
  wall_time_seconds_ = 0;
}
inline double ResourceMetrics::wall_time_seconds() const {
  // @@protoc_insertion_point(field_get:learning.genomics.deepvariant.ResourceMetrics.wall_time_seconds)
  return wall_time_seconds_;
}
inline void ResourceMetrics::set_wall_time_seconds(double value) {
  
  wall_time_seconds_ = value;
  // @@protoc_insertion_point(field_set:learning.genomics.deepvariant.ResourceMetrics.wall_time_seconds)
}

// double cpu_user_time_seconds = 6;
inline void ResourceMetrics::clear_cpu_user_time_seconds() {
  cpu_user_time_seconds_ = 0;
}
inline double ResourceMetrics::cpu_user_time_seconds() const {
  // @@protoc_insertion_point(field_get:learning.genomics.deepvariant.ResourceMetrics.cpu_user_time_seconds)
  return cpu_user_time_seconds_;
}
inline void ResourceMetrics::set_cpu_user_time_seconds(double value) {
  
  cpu_user_time_seconds_ = value;
  // @@protoc_insertion_point(field_set:learning.genomics.deepvariant.ResourceMetrics.cpu_user_time_seconds)
}

// double cpu_system_time_seconds = 7;
inline void ResourceMetrics::clear_cpu_system_time_seconds() {
  cpu_system_time_seconds_ = 0;
}
inline double ResourceMetrics::cpu_system_time_seconds() const {
  // @@protoc_insertion_point(field_get:learning.genomics.deepvariant.ResourceMetrics.cpu_system_time_seconds)
  return cpu_system_time_seconds_;
}
inline void ResourceMetrics::set_cpu_system_time_seconds(double value) {
  
  cpu_system_time_seconds_ = value;
  // @@protoc_insertion_point(field_set:learning.genomics.deepvariant.ResourceMetrics.cpu_system_time_seconds)
}

// int32 memory_peak_rss_mb = 8;
inline void ResourceMetrics::clear_memory_peak_rss_mb() {
  memory_peak_rss_mb_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResourceMetrics::memory_peak_rss_mb() const {
  // @@protoc_insertion_point(field_get:learning.genomics.deepvariant.ResourceMetrics.memory_peak_rss_mb)
  return memory_peak_rss_mb_;
}
inline void ResourceMetrics::set_memory_peak_rss_mb(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  memory_peak_rss_mb_ = value;
  // @@protoc_insertion_point(field_set:learning.genomics.deepvariant.ResourceMetrics.memory_peak_rss_mb)
}

// int64 read_bytes = 9;
inline void ResourceMetrics::clear_read_bytes() {
  read_bytes_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ResourceMetrics::read_bytes() const {
  // @@protoc_insertion_point(field_get:learning.genomics.deepvariant.ResourceMetrics.read_bytes)
  return read_bytes_;
}
inline void ResourceMetrics::set_read_bytes(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  read_bytes_ = value;
  // @@protoc_insertion_point(field_set:learning.genomics.deepvariant.ResourceMetrics.read_bytes)
}

// int64 write_bytes = 10;
inline void ResourceMetrics::clear_write_bytes() {
  write_bytes_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ResourceMetrics::write_bytes() const {
  // @@protoc_insertion_point(field_get:learning.genomics.deepvariant.ResourceMetrics.write_bytes)
  return write_bytes_;
}
inline void ResourceMetrics::set_write_bytes(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  write_bytes_ = value;
  // @@protoc_insertion_point(field_set:learning.genomics.deepvariant.ResourceMetrics.write_bytes)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace deepvariant
}  // namespace genomics
}  // namespace learning

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_deepvariant_2fprotos_2fresources_2eproto
