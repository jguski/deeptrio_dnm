//////////////////////////////////////////////////////////////////////
// This file was automatically generated by PyCLIF.
// Version 0.3
//////////////////////////////////////////////////////////////////////
// source: third_party/nucleus/protos/range.proto

#include "third_party/nucleus/protos/range.pb.h"
#include "clif/python/postconv.h"

namespace nucleus { namespace genomics { namespace v1 {
using namespace ::clif;

// CLIF use `::nucleus::genomics::v1::Range` as Range
bool Clif_PyObjAs(PyObject* input, ::nucleus::genomics::v1::Range* output);
PyObject* Clif_PyObjFrom(const ::nucleus::genomics::v1::Range&, py::PostConv);
bool Clif_PyObjAs(PyObject*, std::unique_ptr<::nucleus::genomics::v1::Range>*);
PyObject* Clif_PyObjFrom(std::unique_ptr<const ::nucleus::genomics::v1::Range>, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<const ::nucleus::genomics::v1::Range>, py::PostConv);

} } }  // namespace nucleus::genomics::v1
