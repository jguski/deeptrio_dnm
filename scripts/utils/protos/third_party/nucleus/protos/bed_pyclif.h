//////////////////////////////////////////////////////////////////////
// This file was automatically generated by PyCLIF.
// Version 0.3
//////////////////////////////////////////////////////////////////////
// source: third_party/nucleus/protos/bed.proto

#include "third_party/nucleus/protos/bed.pb.h"
#include "clif/python/postconv.h"

namespace nucleus { namespace genomics { namespace v1 {
using namespace ::clif;

// CLIF use `::nucleus::genomics::v1::BedRecord` as BedRecord
bool Clif_PyObjAs(PyObject* input, ::nucleus::genomics::v1::BedRecord* output);
PyObject* Clif_PyObjFrom(const ::nucleus::genomics::v1::BedRecord&, py::PostConv);
bool Clif_PyObjAs(PyObject*, std::unique_ptr<::nucleus::genomics::v1::BedRecord>*);
PyObject* Clif_PyObjFrom(std::unique_ptr<const ::nucleus::genomics::v1::BedRecord>, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<const ::nucleus::genomics::v1::BedRecord>, py::PostConv);
// CLIF use `::nucleus::genomics::v1::BedHeader` as BedHeader
bool Clif_PyObjAs(PyObject* input, ::nucleus::genomics::v1::BedHeader* output);
PyObject* Clif_PyObjFrom(const ::nucleus::genomics::v1::BedHeader&, py::PostConv);
bool Clif_PyObjAs(PyObject*, std::unique_ptr<::nucleus::genomics::v1::BedHeader>*);
PyObject* Clif_PyObjFrom(std::unique_ptr<const ::nucleus::genomics::v1::BedHeader>, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<const ::nucleus::genomics::v1::BedHeader>, py::PostConv);
// CLIF use `::nucleus::genomics::v1::BedReaderOptions` as BedReaderOptions
bool Clif_PyObjAs(PyObject* input, ::nucleus::genomics::v1::BedReaderOptions* output);
PyObject* Clif_PyObjFrom(const ::nucleus::genomics::v1::BedReaderOptions&, py::PostConv);
bool Clif_PyObjAs(PyObject*, std::unique_ptr<::nucleus::genomics::v1::BedReaderOptions>*);
PyObject* Clif_PyObjFrom(std::unique_ptr<const ::nucleus::genomics::v1::BedReaderOptions>, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<const ::nucleus::genomics::v1::BedReaderOptions>, py::PostConv);
// CLIF use `::nucleus::genomics::v1::BedWriterOptions` as BedWriterOptions
bool Clif_PyObjAs(PyObject* input, ::nucleus::genomics::v1::BedWriterOptions* output);
PyObject* Clif_PyObjFrom(const ::nucleus::genomics::v1::BedWriterOptions&, py::PostConv);
bool Clif_PyObjAs(PyObject*, std::unique_ptr<::nucleus::genomics::v1::BedWriterOptions>*);
PyObject* Clif_PyObjFrom(std::unique_ptr<const ::nucleus::genomics::v1::BedWriterOptions>, py::PostConv);
PyObject* Clif_PyObjFrom(std::shared_ptr<const ::nucleus::genomics::v1::BedWriterOptions>, py::PostConv);
// CLIF use `::nucleus::genomics::v1::BedRecord::Strand` as BedRecord.Strand
bool Clif_PyObjAs(PyObject* input, ::nucleus::genomics::v1::BedRecord::Strand* output);
PyObject* Clif_PyObjFrom(::nucleus::genomics::v1::BedRecord::Strand, py::PostConv);

} } }  // namespace nucleus::genomics::v1
